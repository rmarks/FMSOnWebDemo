@page "/laod"
@inject IServiceProvider ServiceProvider
@inject NavigationManager NavManager
@implements IDisposable

<div class="main">
    @if (pagedWarehouses == null)
    {
        <p class="m-2">Loading...</p>
    }
    else
    {
<div class="container">

    <h3 class="my-3">@title</h3>

    @*<table class="table table-hover">
        <thead class="thead-light">
            <tr><th>Ladu</th><th>Laos kokku</th><th>Reserv. kokku</th><th>Vabu kokku</th></tr>
        </thead>
        <tbody>
            @foreach (var w in warehouses)
            {
                <tr>
                    <td>@w.Name</td>
                    <td>@w.TotalStockQuantity</td>
                    <td>@w.TotalReservedQuantity</td>
                    <td>@(w.TotalStockQuantity - w.TotalReservedQuantity)</td>
                </tr>
            }
        </tbody>
    </table>*@

    <PagedTableControl PagedItems="@pagedWarehouses" TItem="LocationListItemDto" Context="warehouse"
                       ItemSelected="@((item) => HandleItemSelected(item))"
                       PageChanged="@((cp) => HandleOptionsChanged(cp))">
        <TableHeader>
            <th>Ladu</th>
            <th style="text-align: right">Tooteid</th>
            <th style="text-align: right">Laos kokku</th>
            <th style="text-align: right">Reserv. kokku</th>
            <th style="text-align: right">Vabu kokku</th>
        </TableHeader>
        <RowTemplate>
            <td style="width: 40%">@warehouse.Name</td>
            <td style="width: 15%; text-align: right">@ParseSpaceInsteadOfZero(warehouse.TotalCount)</td>
            <td style="width: 15%; text-align: right">@ParseSpaceInsteadOfZero(warehouse.TotalStockQuantity)</td>
            <td style="width: 15%; text-align: right">@ParseSpaceInsteadOfZero(warehouse.TotalReservedQuantity)</td>
            <td style="width: 15%; text-align: right">@(ParseSpaceInsteadOfZero(warehouse.TotalStockQuantity - warehouse.TotalReservedQuantity))</td>
        </RowTemplate>
    </PagedTableControl>

</div>
    }
</div>


@code {
    PagedList<LocationListItemDto> pagedWarehouses;
    LocationListOptions options = new LocationListOptions { CurrentPage = 1, PageSize = 13 };
    string title = "Valmiskaubalaod";

    protected override void OnInitialized()
    {
        UpdateList();

        NavManager.LocationChanged += HandleLocationChanged;
    }

    void UpdateList()
    {
        NavManager.SetParametersFromQueryString(options);
        pagedWarehouses = ServiceProvider.GetService<ILocationService>().GetWarehouses(options);
    }

    string ParseSpaceInsteadOfZero(int someInt) => someInt > 0 ? someInt.ToString() : "";

    void HandleOptionsChanged(int currentPage = 1)
    {
        options.CurrentPage = currentPage;

        string relativeUri = NavManager.GetPathAndQueryStringFromParameters(options);
        NavManager.NavigateTo(relativeUri);
    }

    void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        UpdateList();
        StateHasChanged();
    }

    void HandleItemSelected(LocationListItemDto item)
    {

    }

    public void Dispose()
    {
        NavManager.LocationChanged -= HandleLocationChanged;
    }
}
