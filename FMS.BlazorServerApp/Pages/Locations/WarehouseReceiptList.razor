@page "/laovastuvotulehed"
@inject IServiceProvider ServiceProvider

<div class="sidebar p-3" style="background-color: aliceblue">
    <h3 class="text-center">Vastuvõtulehed</h3>


</div>

<div class="main p-3">
    <PagedTableControl PagedItems="@pagedReceipts" TItem="LocationDeliveryListItemDto" Context="receipt"
                       ItemSelected="@((item) => HandleItemSelected(item))"
                       PageChanged="@((cp) => HandleOptionsChanged(cp))">
        <TableHeader>
            <th>Nr.</th>
            <th>Saaja</th>
            <th>Saatja</th>
            <th>Kuupäev</th>
            <th>Olek</th>
        </TableHeader>
        <RowTemplate>
            <td style="width: 15%">@receipt.DocumentNo</td>
            <td style="width: 30%">@receipt.ToLocationName</td>
            <td style="width: 30%">@receipt.FromLocationName</td>
            <td style="width: 15%">@receipt.DocumentDate.ToShortDateString()</td>
            <td style="width: 10%">@receipt.StatusName</td>
        </RowTemplate>
    </PagedTableControl>
</div>

<div class="sidebar" style="background-color: aliceblue"></div>

@code {
    PagedList<LocationDeliveryListItemDto> pagedReceipts;
    DeliveryListOptions options = new DeliveryListOptions { CurrentPage = 1, PageSize = 14, DocumentTypeCode = "VL", ToLocationTypeCode = "VL" };

    protected override void OnInitialized()
    {
        UpdateList();
    }

    void UpdateList()
    {
        pagedReceipts = ServiceProvider.GetService<ILocationDeliveryService>().ReceiptFilterPage(options);
    }

    void HandleItemSelected(LocationDeliveryListItemDto item)
    {

    }

    void HandleOptionsChanged(int currentPage)
    {
        options.CurrentPage = currentPage;

        UpdateList();
    }
}
