@page "/allhanketarned"
@inject IServiceProvider ServiceProvider
@inject NavigationManager NavManager

<div class="main">
    @if (pagedReceipts?.List == null || dropdowns == null)
    {
        <p class="m-2">Loading...</p>
    }
    else
    {
        <div class="container">

            <DeliveryNoteHeaderComponent Title="@title">
                <SelectControl class="form-control" Title="Kõik laod" Values="@dropdowns.ToLocations"
                               @bind-Value="@options.ToLocationId" OnChangeCallback="@(() => UpdateList())" />

                <DocumentStatusSelectControl class="form-control ml-2" @bind-Value="@options.IsClosed"
                                             OnChangeCallback="@(() => UpdateList())" />
            </DeliveryNoteHeaderComponent>

            <PagedTableControl PagedItems="@pagedReceipts" TItem="ReceiptListItemDto" Context="receipt"
                               ItemSelected="@((item) => HandleItemSelected(item))"
                               PageChanged="@((cp) => HandlePageChanged(cp))">
                <TableHeader>
                    <th>Nr.</th>
                    <th>Saaja ladu</th>
                    <th>Saatja</th>
                    <th>Kuupäev</th>
                    <th>Olek</th>
                </TableHeader>
                <RowTemplate>
                    <td style="width: 15%">@receipt.DeliveryNo</td>
                    <td style="width: 30%">@receipt.ToLocationName</td>
                    <td style="width: 30%">@receipt.FromLocationName</td>
                    <td style="width: 15%">@receipt.DeliveryDate.ToShortDateString()</td>
                    <td style="width: 10%">@receipt.StatusName</td>
                </RowTemplate>
            </PagedTableControl>

        </div>
    }
</div>


@code {
    private PagedList<ReceiptListItemDto> pagedReceipts;
    private ReceiptDropdowns dropdowns;
    private ReceiptListOptions options = new ReceiptListOptions { PageSize = 13 };
    private string title = "Allhanke tarned";

    protected override async Task OnInitializedAsync()
    {
        dropdowns = await ServiceProvider.GetService<IReceiptDropdownsService>().GetOutSourcingReceiptDropdowns();
        UpdateList();
    }

    private void UpdateList(int currentPage = 1)
    {
        options.CurrentPage = currentPage;
        pagedReceipts = ServiceProvider.GetService<IOutsourcingReceiptService>().FilterPage(options);
    }

    private void HandlePageChanged(int currentPage)
    {
        UpdateList(currentPage);
        StateHasChanged();
    }

    private void HandleItemSelected(ReceiptListItemDto item)
    {
        NavManager.NavigateTo($"allhanketarne/{item.DeliveryNoteId}");
    }
}
