@page "/toodangulahetused"
@inject IServiceProvider ServiceProvider
@inject NavigationManager NavManager

<div class="main">
    @if (pagedItems?.List == null || dropdowns == null)
    {
        <p class="m-2">Loading...</p>
    }
    else
    {
        <div class="container">

            <DeliveryNoteHeaderComponent Title="@title">
                <SelectControl class="form-control" Title="Kõik laod" Values="@dropdowns.FromLocations"
                               @bind-Value="@options.FromLocationId" OnChangeCallback="@(() => UpdateList())" />

                <SelectControl class="form-control ml-2" Title="Kõik saajad" Values="@dropdowns.ToLocations"
                               @bind-Value="@options.ToLocationId" OnChangeCallback="@(() => UpdateList())" />

                <DocumentStatusSelectControl class="form-control ml-2" @bind-Value="@options.IsClosed"
                                             OnChangeCallback="@(() => UpdateList())" />
            </DeliveryNoteHeaderComponent>


            <PagedTableControl PagedItems="@pagedItems" TItem="DeliveryListItemDto" Context="shipment"
                               ItemSelected="@((item) => HandleItemSelected(item))"
                               PageChanged="@((cp) => HandlePageChanged(cp))">
                <TableHeader>
                    <th>Nr.</th>
                    <th>Saatja ladu</th>
                    <th>Saaja</th>
                    <th>Kuupäev</th>
                    <th>Olek</th>
                </TableHeader>
                <RowTemplate>
                    <td style="width: 15%">@shipment.DeliveryNo</td>
                    <td style="width: 30%">@shipment.FromLocationName</td>
                    <td style="width: 30%">@shipment.ToLocationName</td>
                    <td style="width: 15%">@shipment.DeliveryDate.ToShortDateString()</td>
                    <td style="width: 10%">@shipment.StatusName</td>
                </RowTemplate>
            </PagedTableControl>

        </div>
    }
</div>

@code {
    private PagedList<DeliveryListItemDto> pagedItems;
    private DeliveryDropdowns dropdowns;
    private DeliveryListOptions options = new DeliveryListOptions { PageSize = 13 };
    private string title = "Toodangutagastuse lähetused";

    protected override async Task OnInitializedAsync()
    {
        dropdowns = await ServiceProvider.GetService<IDeliveryDropdownsService>().GetProductionShipmentDropdowns();
        UpdateList();
    }

    private void UpdateList(int currentPage = 1)
    {
        options.CurrentPage = currentPage;
        pagedItems = ServiceProvider.GetService<IProductionReceiptService>().ShipmentFilterPage(options);
    }

    private void HandlePageChanged(int currentPage)
    {
        UpdateList(currentPage);
        StateHasChanged();
    }

    private void HandleItemSelected(DeliveryListItemDto item)
    {
        NavManager.NavigateTo($"toodangulahetus/{item.DeliveryNoteId}");
    }
}
