@page "/tellimused"
@inherits PagedListComponentBase<SalesOrderListItemDto, SalesOrderListOptions>

<div class="sidebar p-4">
    <h3 class="text-center text-white">Müügitellimused</h3>

    <SalesOrderListFilter Options="Options" OnOptionsChanged="@(() => HandleOptionsChanged())" />
</div>

<div class="main p-3">
    @if (PagedList?.List == null)
    {
        <p class="text-secondary">Loading...</p>
    }
    else
    {
        <PagedTableControl PagedItems="@PagedList" TItem="SalesOrderListItemDto" Context="order"
                           ItemDblclicked="@((item) => HandleItemSelected($"tellimus/{item.OrderId}"))"
                           PageChanged="@((cp) => HandleOptionsChanged(cp))">
            <TableHeader>
                <th>Nr.</th>
                <th>Klient</th>
                <th>Saaja</th>
                <th>Kuupäev</th>
                <th>Tarneaeg</th>
                <th>Olek</th>
            </TableHeader>
            <RowTemplate>
                <td style="width: 10%">@order.OrderNo</td>
                <td style="width: 30%">@order.CustomerName</td>
                <td style="width: 30%">@order.ConsigneeName</td>
                <td style="width: 10%">@order.OrderDate.ToShortDateString()</td>
                <td style="width: 10%">@(order.DeliveryDate?.ToShortDateString() ?? String.Empty)</td>
                <td style="width: 10%">@order.StatusName</td>
            </RowTemplate>
        </PagedTableControl>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        Options = new SalesOrderListOptions { PageSize = 14, CurrentPage = 1, IsClosed = false };
        GetPagedList = (p) => ServiceProvider.GetService<ISalesOrderListService>().FilterPage(p);

        base.OnInitialized();
    }
}
