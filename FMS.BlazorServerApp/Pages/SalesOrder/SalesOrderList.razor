@page "/tellimused"
@inject IServiceProvider ServiceProvider
@inject NavigationManager NavManager

<div class="sidebar py-2 px-4">
    <h3 class="text-center text-white mb-5">Tellimused</h3>
</div>

<div class="main p-3">
    <table class="table table-hover">
        <thead class="thead-light">
            <tr>
                <th>Tell. nr.</th>
                <th>Klient</th>
                <th>Saaja</th>
                <th>Tarneaeg</th>
                <th>Kuupäev</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in pagedSalesOrders.List)
            {
                <tr class="@(order == selectedItem ? "bg-primary text-white" : "")" @onclick="@(() => selectedItem = order)"
                    @ondblclick="@(() => NavManager.NavigateTo($"/tellimus/{order.OrderId}"))"
                    style="cursor: default;">
                    <td>@order.OrderNo</td>
                    <td>@order.CustomerName</td>
                    <td>@order.ConsigneeName</td>
                    <td>@order.OrderDate.ToShortDateString()</td>
                    <td>@(order.DeliveryDate?.ToShortDateString() ?? String.Empty)</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="row">
        <div class="col">
            <NavLink class="btn btn-primary" href="/tellimused/uus">Lisa uus tellimus</NavLink>
        </div>
        <div class="col-auto">
            <Pager Result="pagedSalesOrders" PageChanged="PagerPageChanged" />
        </div>
        <div class="col text-right">
            <p class="text-muted">Tellimusi: @pagedSalesOrders.ItemsCount</p>
        </div>
    </div>
</div>

@code {
    private PagedList<SalesOrderListItemDto> pagedSalesOrders;
    private SalesOrderListItemDto selectedItem;

    public SalesOrderListOptions Options { get; set; } = new SalesOrderListOptions { PageSize = 15, CurrentPage = 1 };

    protected override void OnInitialized()
    {
        UpdateList();
    }

    #region helpers
    private void UpdateList()
    {
        pagedSalesOrders = ServiceProvider.GetService<ISalesOrderListService>().FilterPage(Options);
    }
    #endregion

    #region event handlers
    private void PagerPageChanged(int currentPage)
    {
        Options.CurrentPage = currentPage;
        UpdateList();
        StateHasChanged();
    }
    #endregion
}
