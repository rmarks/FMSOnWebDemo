@page "/kliendid"
@inject IServiceProvider ServiceProvider
@inject AppState AppState
@inject NavigationManager NavManager

<div class="sidebar py-2 px-4">
    <h3 class="text-center text-white mb-5">Kliendid</h3>

    <h6 class="text-white">Ava klient</h6>
    <BlazoredTypeahead SearchMethod="@SearchCustomers"
                       TValue="Customer"
                       TItem="Customer"
                       Value="selectedCustomer"
                       ValueExpression="@(() => selectedCustomer)"
                       ValueChanged="SelectedCustomerChanged"
                       class="form-control"
                       placeholder="Sisesta kliendi nimi">
        <SelectedTemplate>
            @context.Name
        </SelectedTemplate>
        <ResultTemplate>
            @context.Name
        </ResultTemplate>
    </BlazoredTypeahead>

    <h6 class="text-white mt-5">Loendi filter</h6>
    <CustomerListFilterComponent Options="@Options" OptionsChanged="@OnOptionsChanged" />
</div>

<div class="main p-3">
    @if (pagedCustomers?.List == null)
    {
        <p class="text-secondary">Loading...</p>
    }
    else
    {
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th>Nimi</th>
                    <th>Riik</th>
                    <th>Linn</th>
                    <th>Sisestatud</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var customer in pagedCustomers.List)
                {
                    <tr>
                        <td>@customer.Name</td>
                        <td>@customer.PayerAddress.Country.Name</td>
                        <td>@customer.PayerAddress.City</td>
                        <td>@customer.CreatedOn.ToShortDateString()</td>
                        <td class="text-right">
                            <NavLink class="btn btn-dark btn-sm" href="@GetCustomerUrl(customer.Id)">
                                <i class="oi oi-eye text-white" /> Vaata
                            </NavLink>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
        <div class="row">
            <div class="col">
                <NavLink class="btn btn-primary" href="/kliendid/uus">Lisa uus klient</NavLink>
            </div>
            <div class="col-auto">
                <Pager Result="pagedCustomers" PageChanged="PagerPageChanged" />
            </div>
            <div class="col text-right">
                <p class="text-muted">Kliente: @pagedCustomers.ItemsCount</p>
            </div>
        </div>
    }
</div>

<div class="sidebar py-2 px-3">

</div>


@code {
    private PagedList<Customer> pagedCustomers;
    private Customer selectedCustomer;

    public CustomerListOptions Options { get; set; } = new CustomerListOptions { PageSize = 13, CurrentPage = 1 };

    protected override void OnInitialized()
    {
        if (AppState.BackToCustomerList)
        {
            AppState.BackToCustomerList = false;

            if (AppState.CustomerListOptions != null)
                Options = AppState.CustomerListOptions;
        }

        UpdateList();
    }

    #region Helpers
    private void UpdateList()
    {
        pagedCustomers = ServiceProvider.GetService<ICustomerListService>().FilterPage(Options);
    }

    string GetCustomerUrl(int id)
    {
        AppState.CustomerListOptions = Options;
        return $"/kliendid/{id}";
    }

    private async Task<IEnumerable<Customer>> SearchCustomers(string searchText)
    {
        return await ServiceProvider.GetService<ICustomerListService>().SearchCustomers(searchText);
    }
    #endregion

    #region event handlers
    private void OnOptionsChanged()
    {
        Options.CurrentPage = 1;
        UpdateList();
    }

    private void PagerPageChanged(int currentPage)
    {
        Options.CurrentPage = currentPage;
        UpdateList();
        StateHasChanged();
    }

    private void SelectedCustomerChanged(Customer customer)
    {
        selectedCustomer = customer;
        NavManager.NavigateTo($"/kliendid/{selectedCustomer.Id}");
    }
    #endregion
}
